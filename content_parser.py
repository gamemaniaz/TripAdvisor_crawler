import csv, re, requests
from tqdm import tqdm
from multiprocessing import Pool, Manager
from bs4 import BeautifulSoup


def read_file():
    """ read hotel information generated by url_parser.py """
    with open('data/hotels.csv', 'r') as f:
        reader = csv.DictReader(f)
        hotels = [dict(line) for line in reader]
    return hotels


def write_file(hotels):
    """ write extended hotel information """
    with open('data/hotel_ratings.csv', 'w', newline='') as csvfile:
        fieldnames = ['id', 'hotel_name', 'n_comment', 'rank_in_country', 'url', 'excellent', 'good', 'average', 'poor', 'terrible']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for hotel in hotels:
            writer.writerow(hotel)


def worker(hotel):
    res = requests.get(hotel['url'])
    soup = BeautifulSoup(res.text, 'html.parser')
    ratings = [tag.text for tag in soup.find_all('span', {'class': 'hotels-review-list-parts-ReviewRatingFilter__row_num--gIW_f'})]
    if not ratings: 
        ratings = [tag.text for tag in soup.find_all('span', {'class': 'row_num is-shown-at-tablet'})]
        if not ratings:
            ratings = ['0'] * 5
    labels = ['excellent', 'good', 'average', 'poor', 'terrible']
    for i in range(5):
        hotel[labels[i]] = int(ratings[i].replace(',', ''))


def main():
    hotels = read_file()
    manager = Manager()
    hotels_manager = manager.list([manager.dict(hotel) for hotel in hotels])
    with Pool(10) as pool:
        list(tqdm(pool.imap(worker, hotels_manager), total=len(hotels)))
    write_file([dict(hotel) for hotel in hotels_manager])


if __name__ == "__main__":
    main()