import csv, re, requests
from bs4 import BeautifulSoup


def read_file():
    """ read hotel information generated by url_parser.py """
    with open('data/hotels.csv', 'r') as f:
        reader = csv.DictReader(f)
        hotels = [dict(line) for line in reader]
    return hotels


def write_file(hotels):
    """ write extended hotel information """
    with open('data/hotel_ratings.csv', 'w', newline='') as csvfile:
        fieldnames = ['id', 'hotel_name', 'n_comment', 'rank_in_country', 'url', 'overall_rating', 'address', 'phone', 'rank', 'excellent', 'good', 'average', 'poor', 'terrible']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for hotel in hotels:
            writer.writerow(hotel)


def main():

    hotels = read_file()

    for hotel in hotels:
        
        print('Scraping Hotel', hotel['id'])

        res = requests.get(hotel['url']).text
        soup = BeautifulSoup(res, 'html.parser')

        # extracting hotel information
        info_block = soup.find('div', {'id': 'atf_header'})
        overall_rating = soup.find('span', {'class': 'hotels-hotel-review-about-with-photos-Reviews__overallRating--vElGA'})
        address = info_block.find('span', {'class': 'detail'}).text
        phone = info_block.find('span', {'class': 'is-hidden-mobile'}).text if info_block.find('span', {'class': 'is-hidden-mobile'}) else None
        rank = info_block.find('span', {'class': 'header_popularity'}).text
        ratings = [tag.text for tag in soup.find_all('span', {'class': 'hotels-review-list-parts-ReviewRatingFilter__row_num--gIW_f'})]

        if not ratings:
            ratings = [None] * 5

        hotel['overall_rating'] = overall_rating if overall_rating else None 
        hotel['address'] = address if address else None
        hotel['phone'] = phone if phone else None
        hotel['rank'] = rank if rank else None
        hotel['excellent'] = ratings[0]
        hotel['good'] = ratings[1]
        hotel['average'] = ratings[2]
        hotel['poor'] = ratings[3]
        hotel['terrible'] = ratings[4]

    write_file(hotels)


if __name__ == "__main__":
    main()